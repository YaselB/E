// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using eclipse.Aplication;

#nullable disable

namespace Eclipse.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20241211190806_ModifyComentaryTable")]
    partial class ModifyComentaryTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rol", b =>
                {
                    b.Property<int>("IDRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDRol"));

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.Property<string>("UserRol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDRol");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("eclipse.Aplication.Comentary", b =>
                {
                    b.Property<int>("IDComentary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDComentary"));

                    b.Property<string>("Comentarytext")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.HasKey("IDComentary");

                    b.ToTable("Comentarys");
                });

            modelBuilder.Entity("eclipse.Aplication.Dates", b =>
                {
                    b.Property<int>("IDDates")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDDates"));

                    b.Property<int>("IDTickets")
                        .HasColumnType("integer");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDDates");

                    b.HasIndex("IDTickets");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("eclipse.Aplication.Navbar", b =>
                {
                    b.Property<int>("IDNavbar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDNavbar"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDNavbar");

                    b.ToTable("Navbars");
                });

            modelBuilder.Entity("eclipse.Aplication.Prices", b =>
                {
                    b.Property<int>("IDPrices")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDPrices"));

                    b.Property<int>("IDTickets")
                        .HasColumnType("integer");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.HasKey("IDPrices");

                    b.HasIndex("IDTickets");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("eclipse.Aplication.Ticket", b =>
                {
                    b.Property<int>("IDTicket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IDTicket"));

                    b.Property<string>("destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nameAirline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("origin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IDTicket");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("eclipse.Aplication.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("token")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Rol", b =>
                {
                    b.HasOne("eclipse.Aplication.User", "Username")
                        .WithOne("Rol")
                        .HasForeignKey("Rol", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Username");
                });

            modelBuilder.Entity("eclipse.Aplication.Dates", b =>
                {
                    b.HasOne("eclipse.Aplication.Ticket", "ticket")
                        .WithMany("dates")
                        .HasForeignKey("IDTickets")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ticket");
                });

            modelBuilder.Entity("eclipse.Aplication.Prices", b =>
                {
                    b.HasOne("eclipse.Aplication.Ticket", "ticket")
                        .WithMany("prices")
                        .HasForeignKey("IDTickets")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ticket");
                });

            modelBuilder.Entity("eclipse.Aplication.Ticket", b =>
                {
                    b.Navigation("dates");

                    b.Navigation("prices");
                });

            modelBuilder.Entity("eclipse.Aplication.User", b =>
                {
                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
